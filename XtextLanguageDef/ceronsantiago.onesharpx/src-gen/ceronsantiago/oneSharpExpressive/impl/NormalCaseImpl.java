/**
 * generated by Xtext 2.9.0
 */
package ceronsantiago.oneSharpExpressive.impl;

import ceronsantiago.oneSharpExpressive.CommandBlock;
import ceronsantiago.oneSharpExpressive.NormalCase;
import ceronsantiago.oneSharpExpressive.OneSharpExpressivePackage;
import ceronsantiago.oneSharpExpressive.RegisterParam;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Normal Case</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link ceronsantiago.oneSharpExpressive.impl.NormalCaseImpl#getRegister <em>Register</em>}</li>
 *   <li>{@link ceronsantiago.oneSharpExpressive.impl.NormalCaseImpl#getCaseEmpty <em>Case Empty</em>}</li>
 *   <li>{@link ceronsantiago.oneSharpExpressive.impl.NormalCaseImpl#getCaseOne <em>Case One</em>}</li>
 *   <li>{@link ceronsantiago.oneSharpExpressive.impl.NormalCaseImpl#getCaseSharp <em>Case Sharp</em>}</li>
 * </ul>
 *
 * @generated
 */
public class NormalCaseImpl extends UnlabeledCommandImpl implements NormalCase
{
  /**
   * The cached value of the '{@link #getRegister() <em>Register</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRegister()
   * @generated
   * @ordered
   */
  protected RegisterParam register;

  /**
   * The cached value of the '{@link #getCaseEmpty() <em>Case Empty</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCaseEmpty()
   * @generated
   * @ordered
   */
  protected CommandBlock caseEmpty;

  /**
   * The cached value of the '{@link #getCaseOne() <em>Case One</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCaseOne()
   * @generated
   * @ordered
   */
  protected CommandBlock caseOne;

  /**
   * The cached value of the '{@link #getCaseSharp() <em>Case Sharp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCaseSharp()
   * @generated
   * @ordered
   */
  protected CommandBlock caseSharp;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected NormalCaseImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OneSharpExpressivePackage.Literals.NORMAL_CASE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RegisterParam getRegister()
  {
    return register;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRegister(RegisterParam newRegister, NotificationChain msgs)
  {
    RegisterParam oldRegister = register;
    register = newRegister;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OneSharpExpressivePackage.NORMAL_CASE__REGISTER, oldRegister, newRegister);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRegister(RegisterParam newRegister)
  {
    if (newRegister != register)
    {
      NotificationChain msgs = null;
      if (register != null)
        msgs = ((InternalEObject)register).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OneSharpExpressivePackage.NORMAL_CASE__REGISTER, null, msgs);
      if (newRegister != null)
        msgs = ((InternalEObject)newRegister).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OneSharpExpressivePackage.NORMAL_CASE__REGISTER, null, msgs);
      msgs = basicSetRegister(newRegister, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OneSharpExpressivePackage.NORMAL_CASE__REGISTER, newRegister, newRegister));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CommandBlock getCaseEmpty()
  {
    return caseEmpty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCaseEmpty(CommandBlock newCaseEmpty, NotificationChain msgs)
  {
    CommandBlock oldCaseEmpty = caseEmpty;
    caseEmpty = newCaseEmpty;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OneSharpExpressivePackage.NORMAL_CASE__CASE_EMPTY, oldCaseEmpty, newCaseEmpty);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCaseEmpty(CommandBlock newCaseEmpty)
  {
    if (newCaseEmpty != caseEmpty)
    {
      NotificationChain msgs = null;
      if (caseEmpty != null)
        msgs = ((InternalEObject)caseEmpty).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OneSharpExpressivePackage.NORMAL_CASE__CASE_EMPTY, null, msgs);
      if (newCaseEmpty != null)
        msgs = ((InternalEObject)newCaseEmpty).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OneSharpExpressivePackage.NORMAL_CASE__CASE_EMPTY, null, msgs);
      msgs = basicSetCaseEmpty(newCaseEmpty, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OneSharpExpressivePackage.NORMAL_CASE__CASE_EMPTY, newCaseEmpty, newCaseEmpty));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CommandBlock getCaseOne()
  {
    return caseOne;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCaseOne(CommandBlock newCaseOne, NotificationChain msgs)
  {
    CommandBlock oldCaseOne = caseOne;
    caseOne = newCaseOne;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OneSharpExpressivePackage.NORMAL_CASE__CASE_ONE, oldCaseOne, newCaseOne);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCaseOne(CommandBlock newCaseOne)
  {
    if (newCaseOne != caseOne)
    {
      NotificationChain msgs = null;
      if (caseOne != null)
        msgs = ((InternalEObject)caseOne).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OneSharpExpressivePackage.NORMAL_CASE__CASE_ONE, null, msgs);
      if (newCaseOne != null)
        msgs = ((InternalEObject)newCaseOne).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OneSharpExpressivePackage.NORMAL_CASE__CASE_ONE, null, msgs);
      msgs = basicSetCaseOne(newCaseOne, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OneSharpExpressivePackage.NORMAL_CASE__CASE_ONE, newCaseOne, newCaseOne));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CommandBlock getCaseSharp()
  {
    return caseSharp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCaseSharp(CommandBlock newCaseSharp, NotificationChain msgs)
  {
    CommandBlock oldCaseSharp = caseSharp;
    caseSharp = newCaseSharp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OneSharpExpressivePackage.NORMAL_CASE__CASE_SHARP, oldCaseSharp, newCaseSharp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCaseSharp(CommandBlock newCaseSharp)
  {
    if (newCaseSharp != caseSharp)
    {
      NotificationChain msgs = null;
      if (caseSharp != null)
        msgs = ((InternalEObject)caseSharp).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OneSharpExpressivePackage.NORMAL_CASE__CASE_SHARP, null, msgs);
      if (newCaseSharp != null)
        msgs = ((InternalEObject)newCaseSharp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OneSharpExpressivePackage.NORMAL_CASE__CASE_SHARP, null, msgs);
      msgs = basicSetCaseSharp(newCaseSharp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OneSharpExpressivePackage.NORMAL_CASE__CASE_SHARP, newCaseSharp, newCaseSharp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OneSharpExpressivePackage.NORMAL_CASE__REGISTER:
        return basicSetRegister(null, msgs);
      case OneSharpExpressivePackage.NORMAL_CASE__CASE_EMPTY:
        return basicSetCaseEmpty(null, msgs);
      case OneSharpExpressivePackage.NORMAL_CASE__CASE_ONE:
        return basicSetCaseOne(null, msgs);
      case OneSharpExpressivePackage.NORMAL_CASE__CASE_SHARP:
        return basicSetCaseSharp(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OneSharpExpressivePackage.NORMAL_CASE__REGISTER:
        return getRegister();
      case OneSharpExpressivePackage.NORMAL_CASE__CASE_EMPTY:
        return getCaseEmpty();
      case OneSharpExpressivePackage.NORMAL_CASE__CASE_ONE:
        return getCaseOne();
      case OneSharpExpressivePackage.NORMAL_CASE__CASE_SHARP:
        return getCaseSharp();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OneSharpExpressivePackage.NORMAL_CASE__REGISTER:
        setRegister((RegisterParam)newValue);
        return;
      case OneSharpExpressivePackage.NORMAL_CASE__CASE_EMPTY:
        setCaseEmpty((CommandBlock)newValue);
        return;
      case OneSharpExpressivePackage.NORMAL_CASE__CASE_ONE:
        setCaseOne((CommandBlock)newValue);
        return;
      case OneSharpExpressivePackage.NORMAL_CASE__CASE_SHARP:
        setCaseSharp((CommandBlock)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OneSharpExpressivePackage.NORMAL_CASE__REGISTER:
        setRegister((RegisterParam)null);
        return;
      case OneSharpExpressivePackage.NORMAL_CASE__CASE_EMPTY:
        setCaseEmpty((CommandBlock)null);
        return;
      case OneSharpExpressivePackage.NORMAL_CASE__CASE_ONE:
        setCaseOne((CommandBlock)null);
        return;
      case OneSharpExpressivePackage.NORMAL_CASE__CASE_SHARP:
        setCaseSharp((CommandBlock)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OneSharpExpressivePackage.NORMAL_CASE__REGISTER:
        return register != null;
      case OneSharpExpressivePackage.NORMAL_CASE__CASE_EMPTY:
        return caseEmpty != null;
      case OneSharpExpressivePackage.NORMAL_CASE__CASE_ONE:
        return caseOne != null;
      case OneSharpExpressivePackage.NORMAL_CASE__CASE_SHARP:
        return caseSharp != null;
    }
    return super.eIsSet(featureID);
  }

} //NormalCaseImpl
