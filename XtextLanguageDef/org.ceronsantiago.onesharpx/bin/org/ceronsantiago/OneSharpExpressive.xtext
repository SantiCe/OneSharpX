grammar org.ceronsantiago.OneSharpExpressive hidden (WS,ML_COMMENT,SL_COMMENT)

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate oneSharpExpressive "http://www.ceronsantiago.org/OneSharpExpressive"

//TODO: Factorize
//-------------------------------
// START SYMBOL - 1#X Program
//-------------------------------
Program:
	functions+=FunctionDeclaration+|
	commands+=Command*;
//-------------------------------
// TERMINAL FRAGMENTS
//-------------------------------
terminal fragment LETTER: //Latin alphabet
	'A'..'Z'|'a'..'z'|'_';
terminal fragment DIGIT:
	'0'..'9'
;
//-------------------------------
// TERMINAL RULES
//-------------------------------
terminal INT:
	DIGIT+
;
terminal ID: //A valid ID for a function, label, parameter, etc. 
	LETTER+ (LETTER|DIGIT|'#')*
;
terminal OS:
	'\"' ('1'|'#')+ '\"'
;
terminal WS: 
	(' '|'\t'|'\r'|'\n'|';')+
;

terminal ML_COMMENT	: '/*' -> '*/';
terminal SL_COMMENT 	: '//' !('\n'|'\r')* ('\r'? '\n')?;

//-------------------------------
//Variables
//-------------------------------
IdOrInt:
	ID|INT
;

IdOrString:
	ID|OS	
;
//-------------------------------
// PRIMITIVE FUNCTIONS
//-------------------------------
Write:
	'write' register=IdOrInt word=IdOrString 
;
NormalCase:
	'switch' register=IdOrInt 'case' caseOne+=Command* 'case' caseSharp+=Command* 'case' caseEmpty+=Command* 'end'
;
LoopCase:
	'rswitch' register=IdOrInt 'case' caseOne+=Command* 'case' caseSharp+=Command* 'end'
;
Goto:
	'goto' label=ID
;
Call:
	function=ID '(' ((INT|OS|ID) (',' (INT|OS|ID))*)? ')'
;
Show:
	'show' register=IdOrInt
;
//--------------------------------
// Commands
//--------------------------------
Command:
	{Command} (label=ID ':')? command=(Write|NormalCase|LoopCase|Goto|Call|Show) 
;

//--------------------------------
// Functions
//--------------------------------
FunctionHeader:
	funcName=ID '(' ((('int'|'string') ID) (',' (('int'|'string') ID))*)? ')' 
;
FunctionDeclaration:
	funcHeader=FunctionHeader 'begin' commands+=Command+ 'end'
;

