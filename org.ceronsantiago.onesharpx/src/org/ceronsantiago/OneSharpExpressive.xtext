grammar org.ceronsantiago.OneSharpExpressive hidden (WS)

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate oneSharpExpressive "http://www.ceronsantiago.org/OneSharpExpressive"

//TODO: Factorize
//-------------------------------
// START SYMBOL - 1#X Program
//-------------------------------
Program:
	functions+=FunctionDeclaration+;
//-------------------------------
// TERMINAL FRAGMENTS
//-------------------------------
terminal fragment LETTER: //Latin alphabet
	'A'..'Z'|'a'..'z'|'_';
/*terminal fragment RESERVED: //Reserved strings
	'write'|'switch'|'rswitch'|'goto'|'call'|'case'|'begin'|'end'|'int'|'string';*/
terminal fragment DIGIT:
	'0'..'9'
;
//-------------------------------
// TERMINAL RULES
//-------------------------------
terminal OS:
	('1'|'#')+
;

terminal INT:
	('0'..'9')+
;
terminal ID: //A valid ID for a function, label, parameter, etc. 
	LETTER+ (LETTER|DIGIT|OS)*
;
terminal WS			: (' '|'\t'|'\r'|'\n')+;

//----------------------
//Variables
//----------------------
VAR_INT:
	INT|ID
;
//-------------------------------
// PRIMITIVE FUNCTIONS
//-------------------------------
Write:
	{Write} 'write' word=OS register=VAR_INT
;
NormalCase:
	{NormalCase} 'switch' register=VAR_INT 'case' caseOne+=Command* 'case' caseSharp+=Command* 'case' caseEmpty+=Command* 'end'
;
LoopCase:
	{LoopCase} 'rswitch' register=VAR_INT 'case' caseOne+=Command* 'case' caseSharp+=Command* 'case' caseEmpty+=Command* 'end'
;
Goto:
	{Goto} 'goto' label=ID
;
Call:
	{Call} 'call' function=ID '(' (INT|OS|ID) (',' (INT|OS|ID))* ')'
;
//--------------------------------
// Commands
//--------------------------------
Command:
	{Command} (label=ID ':')? command=(Write|NormalCase|LoopCase|Goto|Call) 
;

//--------------------------------
// Functions
//--------------------------------
FunctionHeader:
	funcName=ID '(' (('int'|'string') ID)? (',' (('int'|'string') ID))* ')' 
;
FunctionDeclaration:
	funcHeader=FunctionHeader 'begin' commands+=Command+ 'end'
;

